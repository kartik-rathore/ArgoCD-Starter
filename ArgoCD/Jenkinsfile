pipeline {
    agent any

    environment {
        EKS_CLUSTER_NAME = 'kartik-eks-jenkins-terraform'
        ARGOCD_NAMESPACE = 'argocd'
        ARGOCD_VERSION = 'stable'
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION = "us-east-1"
    }

    stages {
                stage('Checkout SCM') {
            steps {
                script {
                    checkout scmGit(
                        branches: [[name: '*/main']],
                        extensions: [],
                        userRemoteConfigs: [[url: 'https://github.com/kartik-rathore/ArgoCD-Starter.git']]
                    )
                }
            }
        }
        stage('Configure Kubernetes Credentials') {
            steps {
                script {
                    sh "aws eks update-kubeconfig --name ${env.EKS_CLUSTER_NAME}"
                }
            }
        }

        stage('Deploy ArgoCD') {
            steps {
                script {
                    dir('ArgoCD') {
                        // Create the ArgoCD namespace if it doesn't exist
                        sh "kubectl create namespace ${env.ARGOCD_NAMESPACE} || true"

                        // Apply the ArgoCD installation manifests
                        sh "kubectl apply -n ${env.ARGOCD_NAMESPACE} -f https://raw.githubusercontent.com/argoproj/argo-cd/${env.ARGOCD_VERSION}/manifests/install.yaml"

                        // Apply the ArgoCD application configuration
                        sh "kubectl apply -n ${env.ARGOCD_NAMESPACE} -f app.yaml"
                    }
                }
            }
        }
    }
}
